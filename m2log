#!/usr/bin/env python
import sys
import time
import socketcan
import canmsg
import stcan

check = False

args = sys.argv[1:]
argcnt = len(args)

i = 0
while i < argcnt:
    a = args[i]
    if a == '-c':
        check = True
    elif a == '-l':
        i += 1
        if i < argcnt:
            limit = int(args[i])
            if limit < 0:
                raise Exception("limit not valid")
    i += 1

def data2int32(data):
    r = data[0]
    r = (r << 8) + data[1]
    r = (r << 8) + data[2]
    r = (r << 8) + data[3]
    return r

def main():
    cnt = 0
    cc = 0
    dropped = 0
    id = 5 << 3
    try:
        ch = socketcan.SocketCanChannel(0, msg_class=stcan.StCanMsg)
        while True:
            m = ch.read()
            if m and (m.id == id):
                if cnt == 0:
                    if check:
                        cc = data2int32(m.data)
                elif check:
                    tmp = data2int32(m.data)
                    if tmp != cc + 1:
                        if tmp <= cc:
                            sys.stdout.write('\ncounter wrapped, resetting drop count\n')
                            dropped = 0
                        else:
                            dropped += tmp - cc - 1
                    cc = tmp
                cnt += 1
                sys.stdout.write('\r{0:70s}{1:9d}'.format(str(m), dropped))
                sys.stdout.flush()
    finally:
        if check:
            print '\ndropped {0}'.format(dropped)
        print '\n{0} messages read'.format(cnt) 

if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        pass

